syntax = "proto3";

package stats.service.dashboard;

import "stats/messages/recommendation_request.proto";

option java_multiple_files = true;
option java_package = "ru.practicum.grpc.stats.analyzer";
option java_outer_classname = "RecommendationsControllerProto";

service RecommendationsController {
  // метод возвращает поток рекомендованных мероприятий для указанного пользователя
  rpc GetRecommendationsForUser (message.recommendation.UserPredictionsRequestProto)
      returns (stream message.recommendation.RecommendedEventProto);

  // метод возвращает поток мероприятий, с которыми не взаимодействовал этот пользователь,
  // но которые максимально похожи на указанное мероприятие
  rpc GetSimilarEvents (message.recommendation.SimilarEventsRequestProto)
      returns (stream message.recommendation.RecommendedEventProto);

  // метод получает идентификаторы мероприятий и возвращает их поток с суммой максимальных весов действий каждого
  // пользователя с этими мероприятиями
  rpc GetInteractionsCount (message.recommendation.InteractionsCountRequestProto)
      returns (stream message.recommendation.RecommendedEventProto);
}