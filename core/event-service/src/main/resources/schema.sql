DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS locations CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS compilations CASCADE;
DROP TABLE IF EXISTS events_compilations CASCADE;

CREATE TABLE categories
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE locations
(
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat REAL NOT NULL,
    lon REAL NOT NULL
);

CREATE TABLE events
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation         VARCHAR(2000)         NOT NULL UNIQUE,
    category_id        BIGINT                NOT NULL,
    description        VARCHAR(7000)         NOT NULL,
    event_date         TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    location_id        BIGINT                NOT NULL,
    paid               BOOLEAN DEFAULT FALSE NOT NULL,
    participant_limit  INTEGER DEFAULT 0     NOT NULL,
    request_moderation BOOLEAN DEFAULT TRUE  NOT NULL,
    title              VARCHAR(120)          NOT NULL,
    created            TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    initiator_id       BIGINT                NOT NULL,
    published          TIMESTAMP WITHOUT TIME ZONE,
    state              VARCHAR(50)           NOT NULL,
    CONSTRAINT fk_event_category FOREIGN KEY (category_id) REFERENCES categories (id),
    CONSTRAINT fk_event_location FOREIGN KEY (location_id) REFERENCES locations (id)
);

CREATE TABLE compilations
(
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title  VARCHAR(50) NOT NULL UNIQUE,
    pinned BOOLEAN     NOT NULL DEFAULT FALSE
);

CREATE TABLE events_compilations
(
    compilation_id BIGINT NOT NULL,
    event_id       BIGINT NOT NULL,
    CONSTRAINT fk_event_compilation FOREIGN KEY (event_id) REFERENCES events (id),
    CONSTRAINT fk_compilation_event FOREIGN KEY (compilation_id) REFERENCES compilations (id),
    PRIMARY KEY (compilation_id, event_id)
);
